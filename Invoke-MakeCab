<#

    MakeCab via COM
    Author: Alexander Rymdeko-Harvey (@Killswitch-GUI)
    License: BSD 3-Clause
    Required Dependencies: None
    Optional Dependencies: None

#>

function Invoke-MakeCab {
<#
    .SYNOPSIS

        MakeCab via COM
        Author: Alexander Rymdeko-Harvey (@Killswitch-GUI)
        License: BSD 3-Clause
        Required Dependencies: None
        Optional Dependencies: None

    .DESCRIPTION

        Invoke makecab creation via COM object. Takes a file path and CABs all files in that directory
        Its suggested that you make a DIR just for your staged data.

        Refrence: https://technet.microsoft.com/en-us/library/2009.04.heyscriptingguy.aspx

    .PARAMETER Source

        IP Address or Hostname of the remote system

    .PARAMETER Destination

        Specifies the desired type of execution


    .EXAMPLE

        Import-Module .\Invoke-DCOM.ps1
        Invoke-DCOM -ComputerName '192.168.2.100' -Method MMC20 -Command "calc.exe"
#>

    [CmdletBinding()]
    Param (
        [Parameter(Mandatory = $true, Position = 0)]
        [String]
        $Source,

        [Parameter(Mandatory = $true, Position = 1)]
        [string]
        $Destination
    )

    Begin {
        Write-Verbose "[*] Source path name being used: $Source"
        Write-Verbose "[*] Destination path being used: $Destination"
        # obtain com object
        $makecab = "makecab.makecab"
        $cab = New-Object -ComObject $makecab
    }
    
    
    Process {

        #Begin main process block
    }

    End {

        Write-Output "Completed"
    }
    

}
